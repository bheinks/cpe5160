C51 COMPILER V9.53.0.0   SPI                                                               10/12/2018 03:32:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN SPI.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SPI.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "SPI.h"
   2          
   3          uint8_t SPI_master_init(uint32_t clock_freq) {
   4   1          uint8_t divider, return_value;
   5   1          
   6   1          divider = (OSC_FREQ * 6) / (OSC_PER_INST * clock_freq);
   7   1          return_value = 0;
   8   1          
   9   1          // set SPCON depending on divider value
  10   1          if (divider < 2) {
  11   2              SPCON = 0x70 | (CPOL << 3) | (CPHA << 2);
  12   2          }
  13   1          else if (divider < 4) {
  14   2              SPCON = 0x71 | (CPOL << 3) | (CPHA << 2);
  15   2          }
  16   1          else if (divider < 8) {
  17   2              SPCON = 0x72 | (CPOL << 3) | (CPHA << 2);
  18   2          }
  19   1          else if (divider < 16) {
  20   2              SPCON = 0x73 | (CPOL << 3) | (CPHA << 2);
  21   2          }
  22   1          else if (divider < 32) {
  23   2              SPCON = 0xF0 | (CPOL << 3) | (CPHA << 2);
  24   2          }
  25   1          else if (divider < 64) {
  26   2              SPCON = 0xF1 | (CPOL << 3) | (CPHA << 2);
  27   2          }
  28   1          else if (divider < 128) {
  29   2              SPCON = 0xF2 | (CPOL << 3) | (CPHA << 2);
  30   2          }
  31   1          else {
  32   2              return_value = CLOCK_RATE_ERROR;
  33   2          }
  34   1          
  35   1          return return_value;
  36   1      }
  37          
  38          uint8_t SPI_transfer(uint8_t send_value, uint8_t * rec_value) {
  39   1          uint8_t error_flag, status;
  40   1          uint16_t timeout;
  41   1          
  42   1          SPDAT = send_value;
  43   1          
  44   1          timeout = 0;
  45   1          do {
  46   2              status = SPSTA;
  47   2              timeout++;
  48   2          } while (((status & 0xF0) == 0) && (timeout != 0));
  49   1          
  50   1          if (timeout == 0) {
  51   2              error_flag = TIMEOUT_ERROR;
  52   2              *rec_value = 0xFF;
  53   2          }
  54   1          else if ((status & 0x70) != 0) {
  55   2              error_flag = SPI_ERROR;
C51 COMPILER V9.53.0.0   SPI                                                               10/12/2018 03:32:52 PAGE 2   

  56   2              *rec_value = 0xFF;
  57   2          }
  58   1          else {
  59   2              error_flag = NO_ERROR;
  60   2              *rec_value = SPDAT;
  61   2          }
  62   1          
  63   1          return error_flag;
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    181    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
